@Tutorial(time: 5) {
    @Intro(title: "Testing UIAlertController") {
        Alert controllers provide a simple way to present messages with actionable options to your users. By contrast, unit testing them can be anything but straightforward. Learn how DJATesting makes unit testing your alerts anything but alarming.
        
        @Image(source: "Alert Icon.png", alt: "An icon representing an alert")
    }
    
    @Section(title: "Testing it") {
        @ContentAndMedia {
            All the things!
        }
        
        @Steps {
            @Step {
                In this example, we will assume we have a view controller named `MyViewController`, which contains a child navigation controller. This navigation controller will be overriden via the initialiser using the technique detailed in <doc:Testing-UINavigationController>.
                
                @Code(name: "MyViewControllerTests.swift", file: Testing-UIAlertController-Step-1.swift)
            }
            
            @Step {
                Next we add the functions that we will need to start testing our view controller. Note the mock navigation controller being injected in the `MyViewController` initialiser.
                
                @Code(name: "MyViewControllerTests.swift", file: Testing-UIAlertController-Step-2.swift)
            }
            
            @Step {
                Now we write a test for a code path that presents an alert controller. We use the ``DJATesting/MockNavigationController/receivedViewControllerForPresentation`` property on our mock navigation controller to access the presented alert controller. We can then write assertions about its properties.
                
                @Code(name: "MyViewControllerTests.swift", file: Testing-UIAlertController-Step-3.swift)
            }
            
            @Step {
                We can also write tests for the alert controller's actions. Having captured the alert controller, we can access its `actions` array, and use DJATesting's `invokeHandler()` function on the actions. After invoking an action, we assert that the alert is dismissed by checking the ``DJATesting/MockNavigationController/receivedDismissViewControllerMessage`` property of our mock navigation controller.
                
                @Code(name: "MyViewControllerTests.swift", file: Testing-UIAlertController-Step-4.swift)
            }
        }
    }
}
